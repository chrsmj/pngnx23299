# SPDX-FileCopyrightText: 2023 Penguin PBX Solutions <chris at penguin p b x dot com>
#
# SPDX-License-Identifier: GPL-3.0-or-later
---
# file: roles/pngnx23299/tasks/codecs.yml

# Downloads and installs non-free codecs from Digium.

- name: Make a place for the codec source.
  when: pngnx_new_src
  ansible.builtin.tempfile:
    suffix: ".non-free-codecs"
    state: directory
  register: tmpcodecs

- name: Download extra codecs from Digium server (OPUS, SIREN, etc.).
  tags: nonfree
  ansible.builtin.get_url:
    url: "{{ pngnx_digium_urlbase }}/codec_{{ item }}/{{ pngnx_digium_urlpart2 }}/codec_{{ item }}-{{ pngnx_digium_urlpart3 }}"
    dest: "{{ tmpcodecs.path }}/codec_{{ item }}.tar.gz"
    mode: "0500"
  with_items: "{{ pngnx_digium_codecs }}"

- name: Download versioning info for extra codecs from Digium server (OPUS, SIREN, etc.).
  tags: nonfree
  ansible.builtin.get_url:
    url: "{{ pngnx_digium_urlbase }}/codec_{{ item }}/selector-{{ item }}.js"
    dest: "{{ tmpcodecs.path }}/selector-{{ item }}.js"
    mode: "0500"
  with_items: "{{ pngnx_digium_codecs }}"

- name: Register variables for the codec versions.
  tags: nonfree
  ansible.builtin.command:
    argv:
      - /usr/bin/grep
      - -m
      - 1
      - version
      - "{{ tmpcodecs.path }}/selector-{{ item }}.js"
  register: vcodecs
  changed_when: false
  with_items: "{{ pngnx_digium_codecs }}"

- name: Register variables for the codec source names combined with their version numbers. Quietly.
  tags: nonfree
  no_log: true
  ansible.builtin.command:
    argv:
      - /usr/bin/echo
      - "{{ item.0 }}-{{ pngnx_asterisk_major }}.0_{{ item.1.stdout | regex_replace('[^0-9.]+', '') }}"
  register: vcodecsources
  changed_when: false
  with_together:
    - "{{ pngnx_digium_codecs }}"
    - "{{ vcodecs.results }}"

- name: Unarchive codec sources.
  tags: nonfree
  ansible.builtin.unarchive:
    src: "{{ tmpcodecs.path }}/codec_{{ item }}.tar.gz"
    dest: "{{ tmpcodecs.path }}"
    remote_src: true
    mode: "0700"
  with_items: "{{ pngnx_digium_codecs }}"

- name: Copy codec sources from temp directory to target install directory. Quietly.
  become: true
  tags: nonfree
  no_log: true
  when: pngnx_new_src
  ansible.builtin.copy:
    src: "{{ tmpcodecs.path }}/codec_{{ item.stdout }}-{{ ansible_userspace_architecture }}"
    dest: "{{ pngnx_build_target }}"
    remote_src: true
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0700"
  with_items: "{{ vcodecsources.results }}"

- name: Copy codec tarballs from temp directory to target install directory.
  become: true
  tags: nonfree
  when: pngnx_new_src
  ansible.builtin.copy:
    src: "{{ tmpcodecs.path }}/codec_{{ item }}.tar.gz"
    dest: "{{ pngnx_build_target }}"
    remote_src: true
    mode: "0400"
  with_items: "{{ pngnx_digium_codecs }}"

- name: Install extra codecs. Quietly.
  become: true
  tags: nonfree
  no_log: true
  ansible.builtin.copy:
    src: "{{ pngnx_build_target }}/{{ item.0.stdout }}/codec_{{ item.1 }}.so"
    dest: /usr/lib/asterisk/modules
    remote_src: true
    mode: "0555"
  with_together:
    - "{{ vcodecsources.results }}"
    - "{{ pngnx_digium_codecs }}"

- name: Install extra formats. Quietly. Really only OGG OPUS - others will fail and that is okay.
  become: true
  tags: nonfree
  no_log: true
  ansible.builtin.copy:
    src: "{{ pngnx_build_target }}/{{ item.0.stdout }}/format_ogg_{{ item.1 }}.so"
    dest: /usr/lib/asterisk/modules
    remote_src: true
    mode: "0555"
  with_together:
    - "{{ vcodecsources.results }}"
    - "{{ pngnx_digium_codecs }}"
  ignore_errors: true
