# SPDX-FileCopyrightText: 2023 Penguin PBX Solutions <chris at penguin p b x dot com>
#
# SPDX-License-Identifier: GPL-3.0-or-later
---
# file: roles/pngnx23299/tasks/freepbx-git-basic.yml

# The minimal FreePBX modules that let you send and receive some calls to and from some extensions.
# The itech: Useful for 3rd-party module development for the next major release before it is released :)

- name: Create top temp directory to hold the modules.
  when: new_src
  ansible.builtin.file:
    path: /tmp/{{ freepbx_git_version }}
    state: directory

- name: Create sub temp directories to hold the modules.
  when: new_src
  ansible.builtin.file:
    path: /tmp/{{ freepbx_git_version }}/{{ item }}
    state: directory
  with_items: "{{ freepbx_basic_modules }}"

- name: Download FreePBX module sources from main FREEPBX git repo as zip files.
  when: new_src
  ansible.builtin.get_url:
    url: "{{ freepbx_git_urlbase }}/{{ item }}/{{ freepbx_git_urlpost }}"
    dest: /tmp/{{ freepbx_git_version }}/{{ item }}.zip
  with_items: "{{ freepbx_basic_modules }}"

- name: Unarchive FreePBX module sources.
  when: new_src
  ansible.builtin.unarchive:
    src: /tmp/{{ freepbx_git_version }}/{{ item }}.zip
    dest: /tmp/{{ freepbx_git_version }}/{{ item }}
    remote_src: true
  with_items: "{{ freepbx_basic_modules }}"

- name: Copy FreePBX module sources from temp directory to target install directory.
  become: yes
  when: new_src
  ansible.builtin.copy:
    src: /tmp/{{ freepbx_git_version }}/{{ item }}
    dest: "{{ freepbx_git_target }}"
    remote_src: true
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  with_items: "{{ freepbx_basic_modules }}"

- name: Copy FreePBX module zip files from temp directory to target install directory.
  become: yes
  when: new_src
  ansible.builtin.copy:
    src: /tmp/{{ freepbx_git_version }}/{{ item }}.zip
    dest: "{{ freepbx_git_target }}"
    remote_src: true
  with_items: "{{ freepbx_basic_modules }}"

- name: Start Asterisk using FreePBX scripts.
  become: yes
  ansible.builtin.command: ./start_asterisk start
  args:
    chdir: "{{ freepbx_git_target }}/framework"

# the PATH modification is needed to support use of runuser in the install script
# TODO: maybe: use --dev-links
- name: Install FreePBX framework. Ignoring errors because even with install script -q option there is a bunch of output.
  become: yes
  ansible.builtin.command: ./install -n -f -q
  args:
    chdir: "{{ freepbx_git_target }}/framework"
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
  ignore_errors: true

- name: Copy in the modules from usr/src to var/www. Error on framework during reinstalls is expected.
  become: yes
  ansible.builtin.copy:
    src: "{{ freepbx_git_target }}/{{ item }}"
    dest: /var/www/html/admin/modules
    remote_src: true
  with_items: "{{ freepbx_basic_modules }}"
  ignore_errors: true

- name: Fix perms on PM2 it is a bugger.
  become: yes
  ansible.builtin.file:
    path: /var/www/html/admin/modules/pm2
    owner: asterisk
    group: asterisk
    recurse: true

- name: Install the local modules.
  become: yes
  ansible.builtin.command: /sbin/fwconsole ma installlocal
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
   
- name: Reload FreePBX.
  become: yes
  ansible.builtin.command: /sbin/fwconsole reload
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
   
- name: Restart FreePBX.
  become: yes
  ansible.builtin.command: /sbin/fwconsole restart
  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/usr/sbin"
   
